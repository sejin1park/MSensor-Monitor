
#include <qbluetoothuuid.h>

#include "header/deviceinfo.h"

/*********************************************************************
 * @fn      DeviceInfo
 *
 * @brief    Object initialize. Set the device to search for information.
 *
 * @param d -Device to retrieve information
 *
 * @return  none
 */

DeviceInfo::DeviceInfo(const QBluetoothDeviceInfo &d)
{
    device = d;

}
/*********************************************************************
 * @fn      getAddress
 *
 * @brief   get Device UUID.
 *
 * @param none
 *
 * @return  Devcie UUID
 */
QString DeviceInfo::getAddress() const
{
#ifdef Q_OS_MAC
    // On OS X and iOS we do not have addresses,
    // only unique UUIDs generated by Core Bluetooth.
    return device.deviceUuid().toString();
#else
    return device.address().toString();
#endif
}
/*********************************************************************
 * @fn      getName
 *
 * @brief   get Device name.
 *
 * @param none
 *
 * @return  Devcie name
 */
QString DeviceInfo::getName() const
{
    return device.name();

}

/*********************************************************************
 * @fn      getDevice
 *
 * @brief   Get the currently set device.
 *
 * @param none
 *
 * @return  currently set device.
 */
QBluetoothDeviceInfo DeviceInfo::getDevice()
{
    return device;
}
/*********************************************************************
 * @fn      getDevice
 *
 * @brief   change currently set device.
 *
 * @param dev - Device to be changed.
 *
 * @return   none
 */
void DeviceInfo::setDevice(const QBluetoothDeviceInfo &dev)
{
    device = QBluetoothDeviceInfo(dev);
    Q_EMIT deviceChanged();
}
